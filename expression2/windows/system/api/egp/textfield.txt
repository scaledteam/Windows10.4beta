@name EGP TextField
#Windows 10.4 update 0
@persist Sys_Text_Enable Sys_Text_Line

function appEditTextChangeString(EGPID, VarName:string) {
    Sys_Text_Enable = EGP + EGPID
    Sys_Text_Line = 0
    Sys_Text = appS(VarName)
}

function appEditTextChangeNumber(EGPID, VarName:string) {
    Sys_Text_Enable = EGP + EGPID
    Sys_Text_Line = 0
    Sys_Text = appN(VarName):toString()
}

#Cost 3 egpID
function number appTextFieldString(EGPID, VarName:string, Pos:vector2, Size) {
    local EGP = EGP + EGPID
    local TextSize = egpTextSizeX(10)
    if (!Screen:egpHasObject(EGP) & egpCanSendUmsg()) {
        appBox(EGPID, Pos, vec2(Size, 15), vec(255))
        appBoxOutline(EGPID + 1, EGPID, vec2(), vec2(Size, 15), vec(180))
        appTextBlack(EGPID + 2, EGPID, appS(VarName):right(Size / TextSize), vec2(-Size + 5, -10) / 2, 10, 0)
        Screen:egpFont(EGP + 2, "Courier New")
    }
    else {
        if (App_Click & egpInrange(EGP)) {
            appEditTextChangeString(EGPID, VarName)
        }
        if (Sys_Text_Enable == EGP) {
            Screen:egpColor(EGP + 1, ROM["System", table]["Theme", vector])
            if (changed(Keyboard)) {
                if (Keyboard == 19 & Sys_Text_Line < Sys_Text:length()) {
                    Sys_Text_Line++
                }
                if (Keyboard == 20 & Sys_Text_Line > 0) {
                    Sys_Text_Line--
                }
                if (Keyboard == 13) {
                    return 1
                }
            }
            appS(VarName, sysText())
            local Length = Sys_Text:length()
            local FieldLength = int(Size / TextSize)
            local OffSet = 0
            if (!inrange(Sys_Text_Line, 0, FieldLength)) {
                OffSet = clamp(Sys_Text_Line - int(FieldLength / 2), 0, Length - FieldLength)
            }
            Screen:egpSetText(EGP + 2, (Sys_Text:sub(1, Length - Sys_Text_Line) + ((date()["sec", number] % 2) ? "|" : " ") + Sys_Text:sub(Length - Sys_Text_Line + 1, Length)):sub(Length + 1 - OffSet - clamp(Length + 1, 0, FieldLength), Length + 1 - OffSet))
        }
        elseif(Sys_Text_Enable_Changed) {
            Screen:egpSetText(EGP + 2, appS(VarName):right(Size / TextSize))
            Screen:egpColor(EGP + 1, vec(180))
        }
    }
    return 0
}

#Cost 3 egpID
function number appTextFieldNumber(EGPID, VarName:string, Pos:vector2, Size) {
    local EGP = EGP + EGPID
    local TextSize = egpTextSizeX(10)
    if (!Screen:egpHasObject(EGP) & egpCanSendUmsg()) {
        appBox(EGPID, Pos, vec2(Size, 15), vec(255, 255, 255))
        appBoxOutline(EGPID + 1, EGPID, vec2(), vec2(Size, 15), vec(180))
        appTextBlack(EGPID + 2, EGPID, appN(VarName):toString():right(Size / TextSize), vec2(-Size + 5, -10) / 2, 10, 0)
        Screen:egpFont(EGP + 2, "Courier New")
    }
    else {
        if (App_Click & egpInrange(EGP)) {
            appEditTextChangeNumber(EGPID, VarName)
        }
        if (Sys_Text_Enable == EGP) {
            Screen:egpColor(EGP + 1, ROM["System", table]["Theme", vector])
            if (changed(Keyboard)) {
                if (Keyboard == 19 & Sys_Text_Line < Sys_Text:length()) {
                    Sys_Text_Line++
                }
                if (Keyboard == 20 & Sys_Text_Line > 0) {
                    Sys_Text_Line--
                }
                if (Keyboard == 13) {
                    return 1
                }
            }
            appN(VarName, sysText():toNumber())
            local Length = Sys_Text:length()
            local FieldLength = int(Size / TextSize)
            local OffSet = 0
            if (!inrange(Sys_Text_Line, 0, FieldLength)) {
                OffSet = clamp(Sys_Text_Line - int(FieldLength / 2), 0, Length - FieldLength)
            }
            Screen:egpSetText(EGP + 2, (Sys_Text:sub(1, Length - Sys_Text_Line) + ((date()["sec", number] % 2) ? "|" :  " ") + Sys_Text:sub(Length - Sys_Text_Line + 1, Length)):sub(Length + 1 - OffSet - clamp(Length + 1, 0, FieldLength), Length + 1 - OffSet))
        }
        elseif(Sys_Text_Enable_Changed) {
            Screen:egpSetText(EGP + 2, appN(VarName):toString():right(Size / TextSize))
            Screen:egpColor(EGP + 1, vec(180))
        }
    }
    return 0
}
