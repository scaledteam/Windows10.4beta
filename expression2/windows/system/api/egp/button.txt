@name EGP Button
#Windows 10.4 update 0

#Cost 3 egpID
function number appButton(EGPID, Text:string, Pos:vector2, Size:vector2, Color:vector, Event) {
    local EGP = EGP + EGPID
    if (!Screen:egpHasObject(EGP)) {
        appBox(EGPID, Pos, Size, Color)
        appBoxOutline(EGPID + 1, EGPID, vec2(), Size, Color * 0.7)
        appTextUni(EGPID + 2, EGPID, Text, vec2(), Size:y() / 2, 1) Screen:egpAlign(EGP + 2, 1, 1)
    } else {
        local Inrange = egpInrange(EGP)
        if (Inrange != appN("appButtonInrangeOld" + EGPID)) {
            if (Inrange) {
                Screen:egpColor(EGP, (array(Color:x(), Color:y(), Color:z()):average() < 70) ? Color + vec(50) : Color * 0.7)
            }
            else {
                Screen:egpColor(EGP, Color)
            }
            appN("appButtonInrangeOld" + EGPID, Inrange)
        }
        return Inrange & Event
    }
    return 0
}

function number appButtonHold(EGPID, Text:string, Pos:vector2, Size:vector2, Color:vector) {
    return appButton(EGPID, Text, Pos, Size, Color, App_Mouse)
}

function number appButtonHold(EGPID, Text:string, Pos:vector2, Size:vector2) {
    return appButtonHold(EGPID, Text, Pos, Size, ROM["System", table]["Theme", vector])
}

function number appButton(EGPID, Text:string, Pos:vector2, Size:vector2, Color:vector) {
    return appButton(EGPID, Text, Pos, Size, Color, App_Click)
}

function number appButton(EGPID, Text:string, Pos:vector2, Size:vector2) {
    return appButton(EGPID, Text, Pos, Size, ROM["System", table]["Theme", vector])
}

function number appButtonToggle(EGPID, VarName:string, Pos:vector2, Size:vector2, Color:vector, Text:array) {
    local EGP = EGP + EGPID
    if (!Screen:egpHasObject(EGP)) {
        appBox(EGPID, Pos, Size, Color)
        appBoxOutline(EGPID + 1, EGPID, vec2(), Size, Color * 0.7)
        appTextUni(EGPID + 2, EGPID, Text[appN(VarName) + 1, string], vec2(), Size:y() / 2, 1) Screen:egpAlign(EGP + 2, 1, 1)
    }
    else {
        local Inrange = egpInrange(EGP)
        if (Inrange != appN("appButtonToggleInrangeOld" + EGPID)) {
            if (Inrange) {
                Screen:egpColor(EGP, (array(Color:x(), Color:y(), Color:z()):average() < 70) ? Color + vec(50) : Color * 0.7)
            }
            else {
                Screen:egpColor(EGP, Color)
            }
            appN("appButtonToggleInrangeOld" + EGPID, Inrange)
        }
        if (Inrange & App_Click) {
            appN(VarName, (appN(VarName) + 1) % (Text:count()))
            Screen:egpSetText(EGP + 2, Text[appN(VarName) + 1, string])
            return 1
        }
    }
    return 0
}

function number appButtonToggle(EGPID, VarName:string, Pos:vector2, Size:vector2, Text:array) {
    return appButtonToggle(EGPID, VarName, Pos, Size, ROM["System", table]["Theme", vector], Text)
}

#Cost 4 egpID
function number appCheckBox(EGPID, VarName:string, Text:string, Pos:vector2) {
    local EGP = EGP + EGPID
    if (!Screen:egpHasObject(EGP)) {
        appBox(EGPID, Pos + vec2(8), vec2(16), vec(255))
        appBoxOutline(EGPID + 1, EGPID, vec2(), vec2(16), vec(180))
        appTextUni(EGPID + 2, Text, Pos + vec2(20, 8))
        Screen:egpAlign(EGP + 2, 0, 1)
        Screen:egpLineStrip(EGP + 3, vec2(-6, 0), vec2(0, 6), vec2(9, -10)) Screen:egpColor(EGP + 3, vec4(128, 255, 0, 255 * appN(VarName))) Screen:egpParent(EGP + 3, EGP) Screen:egpSize(EGP + 3, 3)
    } else {
        local Inrange = egpInrange(EGP)
        if (Inrange != appN("appCheckBoxInrangeOld" + EGPID)) {
            if (Inrange) {
                Screen:egpColor(EGP, vec(200))
            } else {
                Screen:egpColor(EGP, vec(255))
            }
            appN("appCheckBoxInrangeOld" + EGPID, Inrange)
        }
        if (Inrange & App_Click) {
            appN(VarName, !appN(VarName))
            Screen:egpAlpha(EGP + 3, 255 * appN(VarName))
            return 1
        }
    }
    return 0
}
