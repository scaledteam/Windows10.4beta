#
# Created by scaled
#

@name Settings

if(app("Settings")){ 
    appEgpMemory(27)
    if(appGraphics(App_Size_Default,vec(190))){
        appBox(2,vec2(-110,7),vec2(80,136),vec(210))
        appBox(1,vec2(40,7),vec2(220,136),vec(230)) 
    }else{
    
    appChoiceMenu(3,vec2(-150,-61),"Activity",array("Wallpaper","Colors","Resolution","Files","Other","About"))
    local Activity = activityManager(6)
    switch(Activity){
        case "Wallpaper",
            if(activityCreate()){appR("WallpaperPack",array(vec(0,140,255),vec(255,200,50),vec(0,130,65),vec(130,40,50)))}
            if(activityGraphics()){
                appTextBlack(6,"Choose your wallpapers",vec2(-60,-50))
                for(I=1,4){
                    appBox(6+I,vec2(-75+45*I,-5),vec2(40,40),appR("WallpaperPack")[I,vector])
                }
                Screen:egpBox(EGP+11,vec2(-30,47),vec2(40,40)) Screen:egpParent(EGP+11,EGP) 
            }else{
            local Wallpaper = ROM["System",table]["Wallpaper",vector]
            Screen:egpColor(EGP+11,Wallpaper)
            appN("WallpaperColorR",Wallpaper:x()) appN("WallpaperColorG",Wallpaper:y()) appN("WallpaperColorB",Wallpaper:z())
            if(App_Click){for(I=1,4){if(egpInrange(EGP+6+I)){ROM["System",table]["Wallpaper",vector]=vec(vec4(appR("WallpaperPack")[I,vector],0))}}}
            if(appSliderDynamic(12,"WallpaperColorR",vec2(0,37),100,0,255)){ROM["System",table]["Wallpaper",vector][1]=appN("WallpaperColorR")}
            if(appSliderDynamic(15,"WallpaperColorG",vec2(0,47),100,0,255)){ROM["System",table]["Wallpaper",vector][2]=appN("WallpaperColorG")}
            if(appSliderDynamic(18,"WallpaperColorB",vec2(0,57),100,0,255)){ROM["System",table]["Wallpaper",vector][3]=appN("WallpaperColorB")} 
        } break
        case "Colors",
            if(activityCreate()){appR("ThemePack",array(vec(200,0,0),vec(0,200,0),vec(70,140,255),vec(150)))}
            if(activityGraphics()){
                appTextBlack(6,"Choose your theme color",vec2(-60,-50))
                for(I=1,4){appBox(6+I,vec2(-75+45*I,-5),vec2(40,40),appR("ThemePack")[I,vector])}
                Screen:egpBox(EGP+11,vec2(-30,47),vec2(40,40)) Screen:egpParent(EGP+11,EGP) }else{
            local Theme = ROM["System",table]["Theme",vector]
            Screen:egpColor(EGP+11,Theme) Screen:egpColor(EGP+3,Theme)
            appN("ThemeColorR",Theme:x()) appN("ThemeColorG",Theme:y()) appN("ThemeColorB",Theme:z())
            if(App_Click){for(I=1,4){if(egpInrange(EGP+6+I)){ROM["System",table]["Theme",vector]=vec(vec4(appR("ThemePack")[I,vector],0))}}}
            if(appSliderDynamic(12,"ThemeColorR",vec2(0,37),100,0,255)){ROM["System",table]["Theme",vector][1] = appN("ThemeColorR")}
            if(appSliderDynamic(15,"ThemeColorG",vec2(0,47),100,0,255)){ROM["System",table]["Theme",vector][2] = appN("ThemeColorG")}
            if(appSliderDynamic(18,"ThemeColorB",vec2(0,57),100,0,255)){ROM["System",table]["Theme",vector][3] = appN("ThemeColorB")} 
        } break
        case "Resolution",
            if(activityGraphics()){
                appN("ResolutionX", ROM["System",table]["Resolution",vector2]:x()) 
                appN("ResolutionY", ROM["System",table]["Resolution",vector2]:y()) 
                appV2("ResolutionXY", vec2(appN("ResolutionX"), appN("ResolutionY")))
                appN("Screen2 mode", ROM["System",table]["Screen2 extend",number])
                appTextBlack(6,"Choose your resolution", vec2(-60, -50))
                local ResolutionShow = clamp(Sys_Resolution, vec2(300, 150), vec2(1024, 512))
                appBox(7, vec2(-50, -30) + ResolutionShow / 12, ResolutionShow / 6, ROM["System",table]["Wallpaper",vector])
                appBox(8,7, vec2(),vec2(300, 150) / 6,vec(200))
                appBox(9,7, vec2(0, ResolutionShow:y() / 12 - 2.5), vec2(ResolutionShow:x() / 6, 5), vec(40)) Screen:egpAlpha(EGP+9, 220)
                appBox(10,7, vec2(-ResolutionShow:x() / 12 + 100 / 6, ResolutionShow:y() / 12 - 65 / 6 - 5), vec2(200, 130) / 6, vec(60)) Screen:egpAlpha(EGP+10, 220)
                appTextBlack(11, "You can use 2 screens with Device input", vec2(150, 69), 6, 2)
            }else{
            appTextFieldNumber(12, "ResolutionX", vec2(100,-20), 60)
            appTextFieldNumber(15, "ResolutionY", vec2(100,  0), 60)
            if(appButton(18,"Apply",vec2(100,20),vec2(60,15))){
                Sys_Resolution = ROM["System",table]["Resolution",vector2]
            }
            if(appButton(21,"Auto",vec2(100,40),vec2(60,15))){
                appV2("ResolutionXY",autoResolution())
                appN("ResolutionX",appV2("ResolutionXY"):x())
                appN("ResolutionY",appV2("ResolutionXY"):y())
                Screen:egpSetText(EGP+13,"512")
                Screen:egpSetText(EGP+16,appV2("ResolutionXY"):y():toString())
                ROM["System",table]["Resolution",vector2] = appV2("ResolutionXY")
            } 
            if(appButtonToggle(24,"Screen2 mode",vec2(100,60),vec2(60,15),array("Mirror","Extend"))){
                ROM["System",table]["Screen2 extend",number] = appN("Screen2 mode")
            }
            if(changed(appN("ResolutionX")+appN("ResolutionY"))){
                appV2("ResolutionXY",vec2(appN("ResolutionX"),appN("ResolutionY")))
                ROM["System",table]["Resolution",vector2]=appV2("ResolutionXY")
                local ResolutionShow=clamp(appV2("ResolutionXY"),App_Size_Default,vec2(1024,512))
                Screen:egpBox(EGP+7, vec2(-50, -30)+ResolutionShow/12,ResolutionShow/6)
                Screen:egpBox(EGP+9, vec2(0, ResolutionShow:y() / 12 - 2.5), vec2(ResolutionShow:x() / 6, 5))
                Screen:egpBox(EGP+10, vec2(-ResolutionShow:x() / 12 + 100 / 6, ResolutionShow:y() / 12 - 75 / 6 - 5), vec2(200, 150) / 6)
            }
        } break
        case "Files",
            if(activityGraphics()){
                appTextBlack(6,"Load file:",vec2(-60,-50))
                appTextBlack(7,"Your gTable - Win"+entity():id():toString(),vec2(150,65),10,2)
                appTextBlack(8,"File core is not loaded!",vec2(40,0),10,1)
            }else{
            local FileClk = 1
            #ifdef runOnFile(number)
                if(activityCreate()){
                    fileList("Windows10/")
                    runOnFile(1)
                }
                if(appTimer(5000)){fileList("Windows10/") Update="Settings File"}
                if(fileLoadedList() & !fileClk()){
                    appArrayFieldUseCTM(9,"File",vec2(40,12),vec2(200,100),fileReadList(),array("Load","Save","New","Delete","Preview"))
                }
    			         local ContextMenuAnswear = appContextMenuAnswear("File")
                switch(ContextMenuAnswear){
                    case "Load", fileLoad( "Windows10/"+fileReadList()[appN("File"),string]) appN("MakeLoad",1) break
                    case "Save", fileWrite("Windows10/"+fileReadList()[appN("File"),string],vonEncode(ROM:toTable())) App_Dialog="Settings Done" break
                    case "New", App_Dialog="Settings New File" break
                    case "Delete", App_Dialog="Settings Delete File" print("C:\\Program Files\\Steam\\steamapps\\common\\GarrysMod\\garrysmod\\data\\e2files\\windows10\nOR"+"\nC:\\Program Files (x86)\\Steam\\steamapps\\common\\GarrysMod\\garrysmod\\data\\e2files\\windows10") break
                    case "Preview", fileLoad( "Windows10/"+fileReadList()[appN("File"),string]) appN("MakeLoad",3) break 
                }
                FileClk = fileClk()
            #endif
            #ifdef vonDecodeTable(string)
                if(FileClk & appN("MakeLoad")){
                    switch(appN("MakeLoad")){
                        case 1, local VonDecodeTable=vonDecodeTable(fileRead())
                            if(ROM["Version",number]==VonDecodeTable["Version",number]){
                                romLoad(VonDecodeTable)
                                Sys_Resolution = ROM["System",table]["Resolution",vector2]
                                Screen:egpColor(EGP+3,ROM["System",table]["Theme",vector])
                                Screen:egpColor(EGP+9+4,ROM["System",table]["Theme",vector])
                            }
                            elseif(ROM["Version",number]>VonDecodeTable["Version",number]){
                                App_Dialog="Settings Old Version"
                            }
                            else{App_Dialog="Settings Wrong Version"} 
                        break
                        case 3,
                            appS("FilePreview",vonDecodeTable(fileRead()):toString())
                            App_Dialog="Settings FilePreview"
                        break
                    }
                    appN("MakeLoad",0)
                }
            #endif
            }
            break
            case "Other",
                if(activityCreate()){foreach(I,N:string=array("FullLoad","Control","SoundVolume")){appN(N,ROM["System",table][N,number])}}
                if(activityGraphics()){
                    appTextBlack(6,"Other settings:",vec2(-60,-50))
                    appTextBlack(7,"Scan entity:",vec2(-55,-35),8)
                    appTextBlack(11,"FullLoad",vec2(-55,-5),8)
                    appTextBlack(16,"NoFullLoad app - "+ROM["System",table]["NFLStartUp",string],vec2(-55,25),8)
                    appTextBlack(20,"Sound enable:",vec2(45,-35),8)
                }else{
                if(appButtonToggle(8,"Control",vec2(-10,-15),vec2(80,15),array("Entity","Screen"))){ROM["System",table]["Control",number]=appN("Control")}
                if(appCheckBox(12,"FullLoad","FullLoad",vec2(-50,5))){ROM["System",table]["FullLoad",number]=appN("FullLoad") App_Dialog="Settings Reboot"}
                if(appButton(17,"Choose",vec2(-10,45),vec2(80,15))){App_Dialog="Settings NoFullLoad app"}
                if(appCheckBox(21,"SoundVolume","Sounds",vec2(50,-25))){ROM["System",table]["SoundVolume",number]=appN("SoundVolume")}
            } break
        case "About",
            if(activityGraphics()){
                local Date = ROM["System",table]["CreateDate",table]
                appTextBlack(6,array(
                    Sys_Name,
                    "Version: " + Sys_Version,
                    "API Version: "+API_Version,
                    "ROM Version: "+ROM["Version",number],
                    "ROM date: "+Date["day",number]+"."+Date["month",number]+"."+Date["year",number]
                ),vec2(-60,-55),10)
                appTextBlack(7,"Ops use: "+ops(),vec2(-60,-5))
                appTextBlack(8,("In use by: "+User:name()):left(220/egpTextSizeX(10)),vec2(-60,5))
            }else{
            Screen:egpSetText(EGP+7,"Ops use: "+ops())
            if(changed(User:name())){Screen:egpSetText(EGP+8,("In use by: "+User:name()):left(220/egpTextSizeX(10)))}
            if(appButton(11,"Update",vec2(110,60),vec2(60,15))){App_Dialog="Settings About" print("http://www.wiremod.com/forum/finished-contraptions/34849-windows-10-e2.html")}
            if(appButton(14,"Authors",vec2(40,60),vec2(60,15))){appS("Activity","Authors")} 
        } break
        case "Authors",
            if(activityGraphics()){
                appTextBlack(6,array(
                "Main developer: scaled",
                "    STEAM_0:1:52598362",
                "Apps:",
                "3D renderer: CornerPin",
                "    STEAM_0:0:40468303"
                ),vec2(-60,-55),10) }else{
            if(appButton(7,"Go back",vec2(110,60),vec2(60,15))){appS("Activity","About")} #Cost 3 egpID.
        } break
    }
    if(App_Dialog){
        if(appDialog("Settings Reboot","Action",10,"You want reboot?")){reset()}
        appDialog("Settings About","BigNotify",10,"http://www.wiremod.com/forum/finished-contraptions/34849-windows-10-e2.html")
        appDialog("Settings FilePreview","FieldNotify",100,appS("FilePreview"))
        if(appDialog("Settings NoFullLoad app","Choose",100,App_List:keys():concat("\n"))){
            ROM["System",table]["NFLStartUp",string]=glbS("#AppDialog","OutText")
            Screen:egpSetText(EGP+16,"NoFullLoad app - "+ROM["System",table]["NFLStartUp",string])
        }
        if(appDialog("Settings New File","Input",10,"Enter file name")){
            local Data = ""
            #ifdef vonEncode(number)
                Data = vonEncode(ROM:toTable())
            #endif
            #ifdef runOnFile(number)
                fileWrite("Windows10/"+glbS("#AppDialog","OutText")+".txt",Data)
            #endif
        }
        #ifdef runOnFile(number)
        appDialog("Settings Done","Notify",10,"Operation done.")
        appDialog("Settings Wrong Version","Notify",10,"Wrong version!")
        if(appDialog("Settings Old Version","Action",8,"Old version. Update?")){
            romLoad(vonDecodeTable(fileRead()))
            reset()
        }
        #endif
        appDialog("Settings Delete File","BigNotify",10,"File core can't delete files. You can go to C:\\Program Files\\Steam\\steamapps\\common\\GarrysMod\\garrysmod\\data\\e2files\\windows10 or same directory and delete needed files.") }
}}
